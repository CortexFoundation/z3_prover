1 1 1 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.04733s
1 1 1 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.046109s
1 1 1 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.048396s
1 1 1 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.049843s
1 1 1 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.046318s
1 1 18 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.046663s
1 1 18 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.047822s
1 1 18 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.045363s
1 1 18 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.044828s
1 1 18 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.040862s
1 1 35 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.045848s
1 1 35 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.057758s
1 1 35 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.047689s
1 1 35 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.063379s
1 1 35 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.060976s
1 1 52 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.067522s
1 1 52 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.042319s
1 1 52 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.04657s
1 1 52 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.039908s
1 1 52 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.04221s
1 1 69 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.071194s
1 1 69 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.046817s
1 1 69 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.050009s
1 1 69 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.042337s
1 1 69 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.056432s
1 1 86 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.055525s
1 1 86 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.041157s
1 1 86 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.046581s
1 1 86 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.056714s
1 1 86 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.060798s
1 14 1 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.080398s
1 14 1 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.063934s
1 14 1 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.050815s
1 14 1 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.045908s
1 14 1 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.049175s
1 14 18 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.068992s
1 14 18 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.05758s
1 14 18 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.05907s
1 14 18 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.060232s
1 14 18 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.047412s
1 14 35 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.115185s
1 14 35 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.054581s
1 14 35 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.065373s
1 14 35 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.06777s
1 14 35 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.046923s
1 14 52 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.202286s
1 14 52 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.066431s
1 14 52 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.091125s
1 14 52 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.049162s
1 14 52 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.054478s
1 14 69 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.270948s
1 14 69 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.086238s
1 14 69 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.06619s
1 14 69 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.053113s
1 14 69 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.054117s
1 14 86 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.329251s
1 14 86 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.111111s
1 14 86 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.081705s
1 14 86 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.054204s
1 14 86 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.027616s
1 27 1 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.376473s
1 27 1 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.136346s
1 27 1 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.156437s
1 27 1 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.157379s
1 27 1 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.139133s
1 27 18 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.199644s
1 27 18 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.153447s
1 27 18 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.128736s
1 27 18 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.140848s
1 27 18 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.126056s
1 27 35 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.301649s
1 27 35 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.127696s
1 27 35 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.11499s
1 27 35 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.112443s
1 27 35 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.072366s
1 27 52 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.365979s
1 27 52 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.119458s
1 27 52 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.116434s
1 27 52 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.06198s
1 27 52 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.033772s
1 27 69 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.451035s
1 27 69 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.133572s
1 27 69 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.109197s
1 27 69 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.021408s
1 27 69 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.030079s
1 27 86 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.590127s
1 27 86 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.125807s
1 27 86 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.080376s
1 27 86 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.045806s
1 27 86 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.051239s
1 40 1 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.778075s
1 40 1 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.200512s
1 40 1 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.204602s
1 40 1 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.191756s
1 40 1 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.191626s
1 40 18 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.314944s
1 40 18 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.210687s
1 40 18 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.213039s
1 40 18 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.16908s
1 40 18 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.164002s
1 40 35 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.472521s
1 40 35 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.21543s
1 40 35 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.184221s
1 40 35 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.121292s
1 40 35 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.099515s
1 40 52 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.551828s
1 40 52 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.163948s
1 40 52 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.11833s
1 40 52 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.086802s
1 40 52 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.046846s
1 40 69 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.688414s
1 40 69 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.151765s
1 40 69 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.16538s
1 40 69 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.05548s
1 40 69 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.057935s
1 40 86 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.94947s
1 40 86 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.183734s
1 40 86 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.141974s
1 40 86 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.063999s
1 40 86 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.061101s
1 53 1 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.18583s
1 53 1 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.302609s
1 53 1 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.327762s
1 53 1 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.324453s
1 53 1 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.342755s
1 53 18 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.530178s
1 53 18 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.312538s
1 53 18 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.322348s
1 53 18 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.288349s
1 53 18 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.274864s
1 53 35 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.718261s
1 53 35 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.322354s
1 53 35 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.306838s
1 53 35 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.372647s
1 53 35 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.247757s
1 53 52 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.903073s
1 53 52 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.322469s
1 53 52 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.22692s
1 53 52 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.160701s
1 53 52 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.11311s
1 53 69 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.974669s
1 53 69 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.216605s
1 53 69 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.204109s
1 53 69 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.152294s
1 53 69 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.140921s
1 53 86 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.21946s
1 53 86 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.278995s
1 53 86 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.214s
1 53 86 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.121448s
1 53 86 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.105107s
1 66 1 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.48909s
1 66 1 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.392065s
1 66 1 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.395415s
1 66 1 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.384348s
1 66 1 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.384303s
1 66 18 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.651757s
1 66 18 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.424046s
1 66 18 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.400951s
1 66 18 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.345652s
1 66 18 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.319563s
1 66 35 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.902712s
1 66 35 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.356908s
1 66 35 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.493594s
1 66 35 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.360177s
1 66 35 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.236024s
1 66 52 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.13526s
1 66 52 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.347068s
1 66 52 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.303809s
1 66 52 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.287085s
1 66 52 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.204766s
1 66 69 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.29479s
1 66 69 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.309378s
1 66 69 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.259503s
1 66 69 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.191703s
1 66 69 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.113697s
1 66 86 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.51932s
1 66 86 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.324982s
1 66 86 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.297588s
1 66 86 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.184312s
1 66 86 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.17286s
1 79 1 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.84611s
1 79 1 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.564457s
1 79 1 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.56389s
1 79 1 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.496653s
1 79 1 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.453776s
1 79 18 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.82714s
1 79 18 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.482145s
1 79 18 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.527795s
1 79 18 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.480116s
1 79 18 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.452788s
1 79 35 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.07046s
1 79 35 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.525806s
1 79 35 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.502916s
1 79 35 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.436016s
1 79 35 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.472577s
1 79 52 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.27341s
1 79 52 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.501958s
1 79 52 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.428717s
1 79 52 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.379456s
1 79 52 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.333487s
1 79 69 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.53781s
1 79 69 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.467127s
1 79 69 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.373774s
1 79 69 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.242854s
1 79 69 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.196694s
1 79 86 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.90429s
1 79 86 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.434174s
1 79 86 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.35079s
1 79 86 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.2331s
1 79 86 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.180671s
1 92 1 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 2.30791s
1 92 1 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.720397s
1 92 1 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.663082s
1 92 1 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.622256s
1 92 1 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.611566s
1 92 18 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.1043s
1 92 18 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.625716s
1 92 18 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.65497s
1 92 18 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.55389s
1 92 18 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.536073s
1 92 35 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.38065s
1 92 35 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.629565s
1 92 35 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.624946s
1 92 35 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.508316s
1 92 35 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.461605s
1 92 52 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.41448s
1 92 52 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.590766s
1 92 52 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.510697s
1 92 52 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.438494s
1 92 52 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.361092s
1 92 69 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 1.89693s
1 92 69 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.486471s
1 92 69 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.788297s
1 92 69 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.604391s
1 92 69 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.35578s
1 92 86 1
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 3.43723s
1 92 86 24
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.531569s
1 92 86 47
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.71949s
1 92 86 70
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.499832s
1 92 86 93
===== Z3_PROVER =====
(declare-fun a_0 () (_ BitVec 64))
(declare-fun cls_prec () (_ BitVec 64))
(declare-fun cls_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (ite (bvsle (concat ((_ extract 61 0) a_0) #b00) #x0000000000000001)
                (concat ((_ extract 61 0) a_0) #b00)
                #x0000000000000001))
      (a!5 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec)))))
      (a!6 (bvsle cls_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff cls_prec))))))
(let ((a!4 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= cls_0
                   (ite (bvsle a!3 #xffffffffffffffff) #xffffffffffffffff a!3))
                (= cls_prec #x0000000000000002)
                (bvsle #x0000000000000001 cls_prec)
                (bvsle cls_prec #x0000000000000020))))
  (not (or (not a!4)
           (and (bvsle a!5 cls_0)
                a!6
                (bvsle #xffffffff80000001 a_0)
                (bvsle a_0 #x000000007fffffff)))))))
===== END =====

The model is deterministic
Time: 0.461615s

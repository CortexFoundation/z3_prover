1 1 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.349539s
1 1 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.373788s
1 1 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.372736s
1 1 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.469882s
1 1 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.456702s
1 1 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.460434s
1 1 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.452808s
1 1 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.398635s
1 1 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.343487s
1 1 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.400237s
1 1 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.434177s
1 1 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.393732s
1 1 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.441351s
1 1 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.36379s
1 1 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.363674s
1 1 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.462774s
1 1 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.400835s
1 1 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.521441s
1 1 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.420355s
1 1 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.366355s
1 1 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.437517s
1 1 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.473254s
1 1 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.435828s
1 1 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.355203s
1 1 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.394913s
1 1 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.456071s
1 1 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.521014s
1 1 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.455691s
1 1 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.33716s
1 1 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.433575s
1 14 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.431548s
1 14 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.529736s
1 14 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.411773s
1 14 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.395859s
1 14 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.414988s
1 14 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.437193s
1 14 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.394148s
1 14 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.418569s
1 14 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.412481s
1 14 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.431618s
1 14 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.516176s
1 14 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.510287s
1 14 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.441755s
1 14 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.423272s
1 14 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.478265s
1 14 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.718094s
1 14 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.388245s
1 14 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.436903s
1 14 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.404515s
1 14 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.432806s
1 14 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.872854s
1 14 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.525508s
1 14 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.464631s
1 14 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.429331s
1 14 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.230908s
1 14 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.718751s
1 14 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.730796s
1 14 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.481316s
1 14 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.257568s
1 14 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.208852s
1 27 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.764703s
1 27 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.12263s
1 27 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.556638s
1 27 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.647421s
1 27 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.550974s
1 27 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.648508s
1 27 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.605045s
1 27 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.306567s
1 27 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.603506s
1 27 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.299685s
1 27 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.587217s
1 27 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.552758s
1 27 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.319153s
1 27 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.320691s
1 27 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.336804s
1 27 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.682768s
1 27 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.539672s
1 27 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.348793s
1 27 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.226827s
1 27 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.236006s
1 27 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.904727s
1 27 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.33147s
1 27 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.30274s
1 27 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.229939s
1 27 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.227896s
1 27 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.09015s
1 27 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.622161s
1 27 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.350011s
1 27 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.335321s
1 27 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.374576s
1 40 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.41358s
1 40 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.54616s
1 40 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.554718s
1 40 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.559534s
1 40 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.503817s
1 40 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.675099s
1 40 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.477214s
1 40 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.496024s
1 40 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.405461s
1 40 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.41058s
1 40 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.86468s
1 40 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.42649s
1 40 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.481259s
1 40 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.408605s
1 40 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.38569s
1 40 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.19979s
1 40 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.463148s
1 40 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.464397s
1 40 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.327311s
1 40 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.275049s
1 40 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.2555s
1 40 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.458577s
1 40 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.387553s
1 40 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.292685s
1 40 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.335467s
1 40 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.47911s
1 40 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.53235s
1 40 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.382212s
1 40 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.358042s
1 40 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.312947s
1 53 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.91447s
1 53 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.49389s
1 53 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.658396s
1 53 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.62171s
1 53 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.70384s
1 53 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.03116s
1 53 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.700599s
1 53 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.670351s
1 53 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.541273s
1 53 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.52645s
1 53 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.21383s
1 53 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.645481s
1 53 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.515062s
1 53 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.528822s
1 53 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.483371s
1 53 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.53455s
1 53 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.613089s
1 53 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.815094s
1 53 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.689483s
1 53 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.400085s
1 53 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.54226s
1 53 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.606057s
1 53 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.474593s
1 53 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.605253s
1 53 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.314453s
1 53 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.97673s
1 53 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.644482s
1 53 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.440057s
1 53 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.361286s
1 53 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.374175s
1 66 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.3037s
1 66 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.738666s
1 66 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.757773s
1 66 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.770439s
1 66 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.814203s
1 66 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.26697s
1 66 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.80042s
1 66 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.736148s
1 66 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.726649s
1 66 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.639471s
1 66 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.56236s
1 66 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.738141s
1 66 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.682458s
1 66 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.664141s
1 66 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.68424s
1 66 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.8428s
1 66 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.653042s
1 66 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.615777s
1 66 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.512649s
1 66 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.568694s
1 66 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.26454s
1 66 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.666141s
1 66 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.528489s
1 66 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.495813s
1 66 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.572914s
1 66 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.43401s
1 66 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.702009s
1 66 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.569496s
1 66 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.458537s
1 66 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.35264s
1 79 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.83206s
1 79 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.97813s
1 79 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.959247s
1 79 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.00202s
1 79 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.943665s
1 79 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.54861s
1 79 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.886412s
1 79 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.897576s
1 79 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.797008s
1 79 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.769091s
1 79 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.05683s
1 79 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.852104s
1 79 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.833297s
1 79 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.732005s
1 79 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.760715s
1 79 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.35614s
1 79 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.996706s
1 79 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.668068s
1 79 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.663324s
1 79 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.472051s
1 79 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.52614s
1 79 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.904237s
1 79 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.67451s
1 79 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.516662s
1 79 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.407439s
1 79 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.93222s
1 79 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.770107s
1 79 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.655765s
1 79 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.440843s
1 79 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.365179s
1 92 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 3.44944s
1 92 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.07088s
1 92 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.11594s
1 92 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.12097s
1 92 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.27606s
1 92 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.38837s
1 92 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.07819s
1 92 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.14934s
1 92 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.04406s
1 92 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.03901s
1 92 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.59492s
1 92 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.42999s
1 92 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.44291s
1 92 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.825595s
1 92 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.798401s
1 92 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.36216s
1 92 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.08986s
1 92 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.18423s
1 92 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.792826s
1 92 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.669188s
1 92 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 3.02523s
1 92 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.05996s
1 92 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.87469s
1 92 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.17501s
1 92 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.424362s
1 92 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 3.51454s
1 92 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.12022s
1 92 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.702897s
1 92 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.768384s
1 92 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun badd_prec () (_ BitVec 64))
(declare-fun badd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= badd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!8 (bvsle badd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff badd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= badd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 badd_prec)
                     (bvsle badd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 badd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.450464s

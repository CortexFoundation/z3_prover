1 1 1 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06468s
1 1 1 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068771s
1 1 1 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057482s
1 1 1 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058028s
1 1 1 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056965s
1 1 18 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058839s
1 1 18 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057245s
1 1 18 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057972s
1 1 18 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.054633s
1 1 18 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055049s
1 1 35 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.054268s
1 1 35 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.052129s
1 1 35 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.054539s
1 1 35 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.054226s
1 1 35 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.050261s
1 1 52 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.054707s
1 1 52 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055328s
1 1 52 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05489s
1 1 52 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.054488s
1 1 52 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056069s
1 1 69 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.052208s
1 1 69 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055306s
1 1 69 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05806s
1 1 69 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057546s
1 1 69 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057803s
1 1 86 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05501s
1 1 86 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057194s
1 1 86 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055123s
1 1 86 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055994s
1 1 86 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.052735s
1 14 1 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056513s
1 14 1 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058057s
1 14 1 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057657s
1 14 1 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057013s
1 14 1 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057868s
1 14 18 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.054761s
1 14 18 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055077s
1 14 18 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.051158s
1 14 18 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058524s
1 14 18 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056771s
1 14 35 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057543s
1 14 35 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057416s
1 14 35 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058734s
1 14 35 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056476s
1 14 35 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05574s
1 14 52 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058123s
1 14 52 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060333s
1 14 52 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056626s
1 14 52 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06138s
1 14 52 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059245s
1 14 69 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059583s
1 14 69 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059692s
1 14 69 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061075s
1 14 69 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062095s
1 14 69 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057102s
1 14 86 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057887s
1 14 86 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061446s
1 14 86 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061104s
1 14 86 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067197s
1 14 86 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060551s
1 27 1 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056161s
1 27 1 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063838s
1 27 1 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063533s
1 27 1 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064448s
1 27 1 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065621s
1 27 18 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065381s
1 27 18 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065257s
1 27 18 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066046s
1 27 18 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.0658s
1 27 18 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064292s
1 27 35 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063264s
1 27 35 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059892s
1 27 35 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059172s
1 27 35 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061019s
1 27 35 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063356s
1 27 52 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062963s
1 27 52 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060391s
1 27 52 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06392s
1 27 52 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061552s
1 27 52 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059827s
1 27 69 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061864s
1 27 69 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065281s
1 27 69 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062172s
1 27 69 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069672s
1 27 69 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.038434s
1 27 86 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.404792s
1 27 86 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066858s
1 27 86 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064678s
1 27 86 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.26792s
1 27 86 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.07884s
1 40 1 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.372406s
1 40 1 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068839s
1 40 1 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064677s
1 40 1 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.070866s
1 40 1 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06826s
1 40 18 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066554s
1 40 18 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067206s
1 40 18 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068509s
1 40 18 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.070875s
1 40 18 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067621s
1 40 35 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062885s
1 40 35 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066997s
1 40 35 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063597s
1 40 35 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061355s
1 40 35 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.087572s
1 40 52 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062362s
1 40 52 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060738s
1 40 52 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064833s
1 40 52 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.080152s
1 40 52 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.048978s
1 40 69 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.407814s
1 40 69 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063207s
1 40 69 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.078138s
1 40 69 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057282s
1 40 69 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.083936s
1 40 86 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.444639s
1 40 86 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.108866s
1 40 86 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.28222s
1 40 86 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.051764s
1 40 86 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.58242s
1 53 1 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.569725s
1 53 1 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066119s
1 53 1 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065216s
1 53 1 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.216637s
1 53 1 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.070941s
1 53 18 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069021s
1 53 18 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.178417s
1 53 18 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.150941s
1 53 18 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.153137s
1 53 18 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.142995s
1 53 35 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.428164s
1 53 35 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.16799s
1 53 35 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.154248s
1 53 35 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.161527s
1 53 35 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.085237s
1 53 52 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.404213s
1 53 52 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.1873s
1 53 52 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.114456s
1 53 52 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.102639s
1 53 52 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.075056s
1 53 69 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.488995s
1 53 69 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.166166s
1 53 69 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.133581s
1 53 69 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.097684s
1 53 69 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068075s
1 53 86 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.614336s
1 53 86 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.132252s
1 53 86 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.147355s
1 53 86 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.61134s
1 53 86 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.098609s
1 66 1 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.747725s
1 66 1 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.221894s
1 66 1 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.35873s
1 66 1 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.273755s
1 66 1 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.237144s
1 66 18 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.389406s
1 66 18 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.241241s
1 66 18 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.276109s
1 66 18 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.206581s
1 66 18 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.190675s
1 66 35 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.356241s
1 66 35 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.210066s
1 66 35 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.167952s
1 66 35 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.35155s
1 66 35 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.152542s
1 66 52 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.564786s
1 66 52 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.234106s
1 66 52 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.37541s
1 66 52 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.179999s
1 66 52 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.67487s
1 66 69 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.617855s
1 66 69 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.206378s
1 66 69 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.158667s
1 66 69 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.60238s
1 66 69 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.078104s
1 66 86 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.786809s
1 66 86 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.191794s
1 66 86 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.178162s
1 66 86 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.083739s
1 66 86 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.072812s
1 79 1 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.902486s
1 79 1 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.291861s
1 79 1 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.452786s
1 79 1 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.35315s
1 79 1 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.29489s
1 79 18 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.522001s
1 79 18 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.278855s
1 79 18 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.254809s
1 79 18 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.271862s
1 79 18 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.207248s
1 79 35 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.509997s
1 79 35 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.297834s
1 79 35 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.221095s
1 79 35 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.237956s
1 79 35 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.194997s
1 79 52 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.629034s
1 79 52 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.274976s
1 79 52 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.192444s
1 79 52 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.197973s
1 79 52 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.174212s
1 79 69 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.792368s
1 79 69 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.233564s
1 79 69 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.189808s
1 79 69 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.144722s
1 79 69 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.115394s
1 79 86 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.911826s
1 79 86 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.49295s
1 79 86 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.74121s
1 79 86 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.110981s
1 79 86 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 5.34104s
1 92 1 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.11232s
1 92 1 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.341466s
1 92 1 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.555315s
1 92 1 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.397503s
1 92 1 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.31746s
1 92 18 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.589435s
1 92 18 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.305198s
1 92 18 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.248573s
1 92 18 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.322772s
1 92 18 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.274199s
1 92 35 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.549348s
1 92 35 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.266167s
1 92 35 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.21542s
1 92 35 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.215985s
1 92 35 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.204221s
1 92 52 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.721405s
1 92 52 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.326836s
1 92 52 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.234841s
1 92 52 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.222541s
1 92 52 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.224274s
1 92 69 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.926098s
1 92 69 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.279714s
1 92 69 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.201338s
1 92 69 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.237803s
1 92 69 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.096618s
1 92 86 1
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.04606s
1 92 86 24
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.267936s
1 92 86 47
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.240095s
1 92 86 70
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.136908s
1 92 86 93
===== Z3_PROVER =====
(declare-fun slice_prec () (_ BitVec 64))
(declare-fun slice_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec)))))
      (a!4 (bvsle slice_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff slice_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= slice_0 a_0)
                         (= slice_prec a_prec)
                         (bvsle #x0000000000000001 slice_prec)
                         (bvsle slice_prec #x0000000000000020)))
               (and (bvsle a!3 slice_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.125053s

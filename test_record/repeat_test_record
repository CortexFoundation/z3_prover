1 1 1 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05762s
1 1 1 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055955s
1 1 1 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057878s
1 1 1 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057611s
1 1 1 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057652s
1 1 18 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058327s
1 1 18 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059583s
1 1 18 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057104s
1 1 18 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056728s
1 1 18 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061807s
1 1 35 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058619s
1 1 35 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057087s
1 1 35 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063418s
1 1 35 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057138s
1 1 35 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061011s
1 1 52 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058703s
1 1 52 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059661s
1 1 52 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062751s
1 1 52 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067315s
1 1 52 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058326s
1 1 69 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065392s
1 1 69 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.086292s
1 1 69 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063471s
1 1 69 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061204s
1 1 69 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058391s
1 1 86 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060873s
1 1 86 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05929s
1 1 86 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067431s
1 1 86 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062279s
1 1 86 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059044s
1 14 1 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059195s
1 14 1 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061461s
1 14 1 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066227s
1 14 1 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060081s
1 14 1 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067254s
1 14 18 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060806s
1 14 18 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069192s
1 14 18 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069563s
1 14 18 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065071s
1 14 18 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066214s
1 14 35 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065935s
1 14 35 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063971s
1 14 35 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063615s
1 14 35 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.070894s
1 14 35 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059993s
1 14 52 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064868s
1 14 52 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059802s
1 14 52 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06642s
1 14 52 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063379s
1 14 52 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06247s
1 14 69 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064942s
1 14 69 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061054s
1 14 69 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063315s
1 14 69 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062496s
1 14 69 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061211s
1 14 86 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064475s
1 14 86 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.084072s
1 14 86 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068469s
1 14 86 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.071679s
1 14 86 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065216s
1 27 1 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.435997s
1 27 1 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066538s
1 27 1 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062728s
1 27 1 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.072486s
1 27 1 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068762s
1 27 18 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06718s
1 27 18 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.074177s
1 27 18 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.074122s
1 27 18 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.070751s
1 27 18 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.073958s
1 27 35 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.075898s
1 27 35 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067341s
1 27 35 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069516s
1 27 35 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069023s
1 27 35 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06773s
1 27 52 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.071849s
1 27 52 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063978s
1 27 52 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.072452s
1 27 52 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066345s
1 27 52 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063588s
1 27 69 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.430164s
1 27 69 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063357s
1 27 69 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068595s
1 27 69 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.040797s
1 27 69 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.075147s
1 27 86 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.493193s
1 27 86 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.129831s
1 27 86 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.098479s
1 27 86 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058919s
1 27 86 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.051088s
1 40 1 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.61495s
1 40 1 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.198877s
1 40 1 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066571s
1 40 1 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.404271s
1 40 1 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.184376s
1 40 18 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.364601s
1 40 18 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.22033s
1 40 18 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.201059s
1 40 18 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.132777s
1 40 18 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.131429s
1 40 35 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.461257s
1 40 35 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.145021s
1 40 35 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.154728s
1 40 35 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.114157s
1 40 35 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.088768s
1 40 52 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.46284s
1 40 52 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.215214s
1 40 52 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.142943s
1 40 52 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.109692s
1 40 52 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.114557s
1 40 69 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.598136s
1 40 69 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.30132s
1 40 69 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.158371s
1 40 69 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063183s
1 40 69 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.071705s
1 40 86 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.759402s
1 40 86 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.236831s
1 40 86 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.116548s
1 40 86 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.100128s
1 40 86 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.095226s
1 53 1 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.917246s
1 53 1 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.349849s
1 53 1 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.311359s
1 53 1 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.530604s
1 53 1 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.292517s
1 53 18 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.54552s
1 53 18 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.310516s
1 53 18 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.262423s
1 53 18 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.23372s
1 53 18 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.255724s
1 53 35 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.703811s
1 53 35 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.307777s
1 53 35 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.263731s
1 53 35 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.214404s
1 53 35 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.178363s
1 53 52 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.680033s
1 53 52 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.30521s
1 53 52 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.27s
1 53 52 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.178898s
1 53 52 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.121161s
1 53 69 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.879705s
1 53 69 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.243607s
1 53 69 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.28808s
1 53 69 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.146028s
1 53 69 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.093793s
1 53 86 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.984804s
1 53 86 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.447601s
1 53 86 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.313363s
1 53 86 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.147932s
1 53 86 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.126924s
1 66 1 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.25226s
1 66 1 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.440262s
1 66 1 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.390295s
1 66 1 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.711281s
1 66 1 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.37344s
1 66 18 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.683204s
1 66 18 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.373687s
1 66 18 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.334478s
1 66 18 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.375253s
1 66 18 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.336155s
1 66 35 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.902476s
1 66 35 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.360964s
1 66 35 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.362783s
1 66 35 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.333924s
1 66 35 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.266184s
1 66 52 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.927309s
1 66 52 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.388888s
1 66 52 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.301646s
1 66 52 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.310196s
1 66 52 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.221517s
1 66 69 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.08279s
1 66 69 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.332058s
1 66 69 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.477266s
1 66 69 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.215383s
1 66 69 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.104939s
1 66 86 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.29951s
1 66 86 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.566313s
1 66 86 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.252956s
1 66 86 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.122884s
1 66 86 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.158615s
1 79 1 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.78362s
1 79 1 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.521816s
1 79 1 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.547353s
1 79 1 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.895038s
1 79 1 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.491756s
1 79 18 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.849153s
1 79 18 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.461698s
1 79 18 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.393242s
1 79 18 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.419119s
1 79 18 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.44968s
1 79 35 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.15595s
1 79 35 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.507714s
1 79 35 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.4177s
1 79 35 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.389418s
1 79 35 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.350636s
1 79 52 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.11825s
1 79 52 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.436257s
1 79 52 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.383993s
1 79 52 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.359774s
1 79 52 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.24222s
1 79 69 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.3923s
1 79 69 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.422157s
1 79 69 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.401393s
1 79 69 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.243384s
1 79 69 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.12914s
1 79 86 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.52201s
1 79 86 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.619739s
1 79 86 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.340231s
1 79 86 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.147872s
1 79 86 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.17611s
1 92 1 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.90025s
1 92 1 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.753365s
1 92 1 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.666019s
1 92 1 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.11993s
1 92 1 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.579132s
1 92 18 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.08819s
1 92 18 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.571138s
1 92 18 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.524138s
1 92 18 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.633082s
1 92 18 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.479016s
1 92 35 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.41007s
1 92 35 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.572532s
1 92 35 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.47737s
1 92 35 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.448591s
1 92 35 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.503306s
1 92 52 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.71672s
1 92 52 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.562359s
1 92 52 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.515002s
1 92 52 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.389609s
1 92 52 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.245537s
1 92 69 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.60223s
1 92 69 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.472419s
1 92 69 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.41817s
1 92 69 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.271113s
1 92 69 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.228648s
1 92 86 1
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.81571s
1 92 86 24
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.739005s
1 92 86 47
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.427942s
1 92 86 70
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.187532s
1 92 86 93
===== Z3_PROVER =====
(declare-fun rpt_prec () (_ BitVec 64))
(declare-fun rpt_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec)))))
      (a!4 (bvsle rpt_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rpt_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rpt_0 a_0)
                         (= rpt_prec a_prec)
                         (bvsle #x0000000000000001 rpt_prec)
                         (bvsle rpt_prec #x0000000000000020)))
               (and (bvsle a!3 rpt_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.206012s

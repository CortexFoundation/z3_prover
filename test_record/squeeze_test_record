1 1 1 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060201s
1 1 1 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062154s
1 1 1 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059859s
1 1 1 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062265s
1 1 1 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064874s
1 1 18 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067712s
1 1 18 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062002s
1 1 18 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060828s
1 1 18 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06061s
1 1 18 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058165s
1 1 35 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060736s
1 1 35 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058066s
1 1 35 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061672s
1 1 35 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057576s
1 1 35 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058897s
1 1 52 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.078682s
1 1 52 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062015s
1 1 52 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065556s
1 1 52 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061051s
1 1 52 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067776s
1 1 69 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063372s
1 1 69 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063457s
1 1 69 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066982s
1 1 69 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060172s
1 1 69 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062726s
1 1 86 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062588s
1 1 86 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.076407s
1 1 86 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062589s
1 1 86 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066589s
1 1 86 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05818s
1 14 1 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061562s
1 14 1 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069062s
1 14 1 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064071s
1 14 1 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064452s
1 14 1 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063694s
1 14 18 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066234s
1 14 18 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061863s
1 14 18 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057043s
1 14 18 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058739s
1 14 18 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.054046s
1 14 35 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058126s
1 14 35 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05922s
1 14 35 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06451s
1 14 35 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059877s
1 14 35 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057592s
1 14 52 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060617s
1 14 52 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065403s
1 14 52 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068643s
1 14 52 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058456s
1 14 52 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058889s
1 14 69 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06694s
1 14 69 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.070786s
1 14 69 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062187s
1 14 69 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064278s
1 14 69 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058692s
1 14 86 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063771s
1 14 86 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063519s
1 14 86 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.071376s
1 14 86 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.073707s
1 14 86 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064757s
1 27 1 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064695s
1 27 1 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067028s
1 27 1 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.077131s
1 27 1 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068781s
1 27 1 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063117s
1 27 18 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065642s
1 27 18 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065916s
1 27 18 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067111s
1 27 18 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06558s
1 27 18 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066975s
1 27 35 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06515s
1 27 35 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061179s
1 27 35 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060757s
1 27 35 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064709s
1 27 35 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063762s
1 27 52 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066844s
1 27 52 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067242s
1 27 52 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06534s
1 27 52 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068379s
1 27 52 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057203s
1 27 69 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065938s
1 27 69 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06597s
1 27 69 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068938s
1 27 69 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.076596s
1 27 69 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.039511s
1 27 86 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.402086s
1 27 86 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068848s
1 27 86 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.07098s
1 27 86 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.30242s
1 27 86 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.046817s
1 40 1 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.404135s
1 40 1 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069185s
1 40 1 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062793s
1 40 1 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.072234s
1 40 1 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.071574s
1 40 18 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068088s
1 40 18 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.073224s
1 40 18 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.078668s
1 40 18 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.070531s
1 40 18 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069561s
1 40 35 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06474s
1 40 35 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.070966s
1 40 35 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063828s
1 40 35 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068689s
1 40 35 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.130111s
1 40 52 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.371712s
1 40 52 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06677s
1 40 52 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06318s
1 40 52 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.086416s
1 40 52 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055135s
1 40 69 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.38481s
1 40 69 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069582s
1 40 69 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.106863s
1 40 69 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.075469s
1 40 69 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.046064s
1 40 86 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.474561s
1 40 86 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.143514s
1 40 86 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.31055s
1 40 86 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056059s
1 40 86 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.61988s
1 53 1 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.608187s
1 53 1 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.071404s
1 53 1 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.071692s
1 53 1 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.239568s
1 53 1 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.073464s
1 53 18 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.072975s
1 53 18 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.169903s
1 53 18 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.152357s
1 53 18 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.146707s
1 53 18 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.134255s
1 53 35 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.392192s
1 53 35 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.145924s
1 53 35 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.127322s
1 53 35 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.195246s
1 53 35 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.098037s
1 53 52 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.450759s
1 53 52 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.145152s
1 53 52 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.147296s
1 53 52 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.134291s
1 53 52 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.092067s
1 53 69 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.524484s
1 53 69 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.135853s
1 53 69 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.169275s
1 53 69 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.134953s
1 53 69 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058244s
1 53 86 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.735584s
1 53 86 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.216048s
1 53 86 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.128745s
1 53 86 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.65665s
1 53 86 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065558s
1 66 1 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.813631s
1 66 1 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.275449s
1 66 1 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.218061s
1 66 1 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.290154s
1 66 1 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.252006s
1 66 18 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.366946s
1 66 18 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.232263s
1 66 18 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.261317s
1 66 18 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.219796s
1 66 18 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.253362s
1 66 35 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.381571s
1 66 35 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.265954s
1 66 35 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.207397s
1 66 35 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.35143s
1 66 35 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.157242s
1 66 52 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.639118s
1 66 52 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.291025s
1 66 52 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.40807s
1 66 52 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.157024s
1 66 52 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.67497s
1 66 69 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.628897s
1 66 69 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.177367s
1 66 69 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.249728s
1 66 69 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.65243s
1 66 69 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.090031s
1 66 86 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.84324s
1 66 86 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.284527s
1 66 86 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.204107s
1 66 86 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.091233s
1 66 86 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.071427s
1 79 1 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.954591s
1 79 1 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.305328s
1 79 1 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.280157s
1 79 1 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.377351s
1 79 1 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.280577s
1 79 18 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.512111s
1 79 18 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.272521s
1 79 18 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.291741s
1 79 18 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.259208s
1 79 18 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.210349s
1 79 35 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.503555s
1 79 35 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.256904s
1 79 35 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.232941s
1 79 35 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.198641s
1 79 35 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.214227s
1 79 52 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.614709s
1 79 52 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.270265s
1 79 52 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.218997s
1 79 52 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.277303s
1 79 52 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.184721s
1 79 69 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.771985s
1 79 69 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.255546s
1 79 69 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.230884s
1 79 69 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.137722s
1 79 69 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.115006s
1 79 86 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.971671s
1 79 86 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.56814s
1 79 86 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.77852s
1 79 86 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.13233s
1 79 86 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 5.33295s
1 92 1 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.15422s
1 92 1 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.409892s
1 92 1 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.343846s
1 92 1 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.467818s
1 92 1 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.354888s
1 92 18 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.582316s
1 92 18 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.333439s
1 92 18 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.395536s
1 92 18 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.392033s
1 92 18 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.345315s
1 92 35 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.603771s
1 92 35 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.339492s
1 92 35 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.320868s
1 92 35 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.25998s
1 92 35 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.257134s
1 92 52 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.719559s
1 92 52 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.30398s
1 92 52 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.320359s
1 92 52 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.25971s
1 92 52 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.190843s
1 92 69 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.00631s
1 92 69 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.33577s
1 92 69 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.250048s
1 92 69 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.206859s
1 92 69 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.09763s
1 92 86 1
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.18742s
1 92 86 24
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.497195s
1 92 86 47
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.342225s
1 92 86 70
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.12599s
1 92 86 93
===== Z3_PROVER =====
(declare-fun squeeze_prec () (_ BitVec 64))
(declare-fun squeeze_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec)))))
      (a!4 (bvsle squeeze_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff squeeze_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= squeeze_0 a_0)
                         (= squeeze_prec a_prec)
                         (bvsle #x0000000000000001 squeeze_prec)
                         (bvsle squeeze_prec #x0000000000000020)))
               (and (bvsle a!3 squeeze_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.140115s

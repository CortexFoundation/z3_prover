2 2 2 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057731s
2 2 2 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05534s
2 2 2 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058928s
2 2 2 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055905s
2 2 2 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058675s
2 2 19 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059708s
2 2 19 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055081s
2 2 19 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.052543s
2 2 19 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.049157s
2 2 19 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.052275s
2 2 36 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.054953s
2 2 36 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.052541s
2 2 36 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058014s
2 2 36 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.052193s
2 2 36 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.052389s
2 2 53 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057274s
2 2 53 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059902s
2 2 53 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060095s
2 2 53 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057125s
2 2 53 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.054566s
2 2 70 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061115s
2 2 70 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060038s
2 2 70 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058325s
2 2 70 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06144s
2 2 70 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056621s
2 2 87 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056016s
2 2 87 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059649s
2 2 87 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060746s
2 2 87 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06451s
2 2 87 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05786s
2 15 2 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058403s
2 15 2 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060029s
2 15 2 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059506s
2 15 2 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061365s
2 15 2 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059897s
2 15 19 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062776s
2 15 19 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062225s
2 15 19 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060236s
2 15 19 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057725s
2 15 19 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.054992s
2 15 36 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05908s
2 15 36 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062827s
2 15 36 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064549s
2 15 36 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059091s
2 15 36 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.079073s
2 15 53 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061846s
2 15 53 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058544s
2 15 53 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062032s
2 15 53 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05757s
2 15 53 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056944s
2 15 70 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058885s
2 15 70 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066178s
2 15 70 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061858s
2 15 70 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065073s
2 15 70 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059066s
2 15 87 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062676s
2 15 87 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066456s
2 15 87 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065333s
2 15 87 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067218s
2 15 87 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.039216s
2 28 2 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.332523s
2 28 2 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064279s
2 28 2 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062235s
2 28 2 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065759s
2 28 2 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060776s
2 28 19 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064058s
2 28 19 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066625s
2 28 19 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065772s
2 28 19 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062991s
2 28 19 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064414s
2 28 36 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06622s
2 28 36 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065292s
2 28 36 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.071718s
2 28 36 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066635s
2 28 36 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066191s
2 28 53 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064428s
2 28 53 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068052s
2 28 53 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06654s
2 28 53 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.20572s
2 28 53 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.035146s
2 28 70 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.406878s
2 28 70 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069151s
2 28 70 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068467s
2 28 70 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.050842s
2 28 70 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.044083s
2 28 87 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.476494s
2 28 87 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.145742s
2 28 87 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.070996s
2 28 87 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.099221s
2 28 87 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.50792s
2 41 2 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.569305s
2 41 2 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062397s
2 41 2 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069034s
2 41 2 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.178522s
2 41 2 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.07047s
2 41 19 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066428s
2 41 19 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.173778s
2 41 19 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.158858s
2 41 19 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.670461s
2 41 19 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.127618s
2 41 36 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.433311s
2 41 36 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.143606s
2 41 36 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.13951s
2 41 36 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.26852s
2 41 36 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.141637s
2 41 53 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.484836s
2 41 53 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.679069s
2 41 53 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.12697s
2 41 53 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.125114s
2 41 53 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.081684s
2 41 70 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.561695s
2 41 70 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.153861s
2 41 70 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.141143s
2 41 70 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.077594s
2 41 70 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.041802s
2 41 87 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.686353s
2 41 87 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.258471s
2 41 87 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.120626s
2 41 87 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.129308s
2 41 87 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.052422s
2 54 2 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.846877s
2 54 2 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.351593s
2 54 2 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.263904s
2 54 2 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.25206s
2 54 2 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.224094s
2 54 19 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.399617s
2 54 19 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.220157s
2 54 19 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.193468s
2 54 19 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.186395s
2 54 19 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.159943s
2 54 36 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.533203s
2 54 36 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.19025s
2 54 36 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.305313s
2 54 36 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.151007s
2 54 36 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.162256s
2 54 53 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.636857s
2 54 53 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.178762s
2 54 53 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.202242s
2 54 53 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.136868s
2 54 53 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.075398s
2 54 70 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.74658s
2 54 70 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.210688s
2 54 70 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.162586s
2 54 70 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.126515s
2 54 70 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.046493s
2 54 87 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.92455s
2 54 87 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.306885s
2 54 87 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.60064s
2 54 87 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.116499s
2 54 87 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 5.06098s
2 67 2 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.11553s
2 67 2 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.468183s
2 67 2 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.308895s
2 67 2 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.404854s
2 67 2 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.303639s
2 67 19 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.623774s
2 67 19 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.334751s
2 67 19 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.312819s
2 67 19 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.287179s
2 67 19 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.252241s
2 67 36 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.660399s
2 67 36 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.326549s
2 67 36 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.319139s
2 67 36 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.248517s
2 67 36 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.7489s
2 67 53 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.954416s
2 67 53 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.333482s
2 67 53 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.245181s
2 67 53 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.201771s
2 67 53 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.14756s
2 67 70 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.14828s
2 67 70 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.305192s
2 67 70 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.65168s
2 67 70 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.185724s
2 67 70 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 5.09838s
2 67 87 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.19719s
2 67 87 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.473963s
2 67 87 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.166193s
2 67 87 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 4.94126s
2 67 87 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.115596s
2 80 2 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.36189s
2 80 2 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.542444s
2 80 2 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.363583s
2 80 2 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.455987s
2 80 2 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.383693s
2 80 19 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.828843s
2 80 19 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.348752s
2 80 19 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.651981s
2 80 19 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.63935s
2 80 19 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.319828s
2 80 36 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.834192s
2 80 36 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.364475s
2 80 36 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.383481s
2 80 36 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.335218s
2 80 36 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.299252s
2 80 53 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.867817s
2 80 53 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.53067s
2 80 53 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.337931s
2 80 53 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.219981s
2 80 53 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.201563s
2 80 70 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.26408s
2 80 70 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.324085s
2 80 70 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.302008s
2 80 70 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.194038s
2 80 70 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.134494s
2 80 87 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.46446s
2 80 87 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.362536s
2 80 87 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.271961s
2 80 87 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.176579s
2 80 87 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.098999s
2 93 2 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.66504s
2 93 2 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.690319s
2 93 2 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.388928s
2 93 2 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.535256s
2 93 2 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.483064s
2 93 19 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.914547s
2 93 19 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.466878s
2 93 19 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.4782s
2 93 19 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.427476s
2 93 19 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.361218s
2 93 36 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.02496s
2 93 36 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.509386s
2 93 36 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.555152s
2 93 36 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.320703s
2 93 36 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.348561s
2 93 53 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.11542s
2 93 53 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.463107s
2 93 53 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.409615s
2 93 53 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.288375s
2 93 53 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.261288s
2 93 70 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.56109s
2 93 70 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.363899s
2 93 70 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.320005s
2 93 70 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.259899s
2 93 70 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.209083s
2 93 87 2
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.63152s
2 93 87 25
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.459162s
2 93 87 48
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.290698s
2 93 87 71
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.225635s
2 93 87 94
===== Z3_PROVER =====
(declare-fun sli_prec () (_ BitVec 64))
(declare-fun sli_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec)))))
      (a!4 (bvsle sli_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff sli_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= sli_0 a_0)
                         (= sli_prec a_prec)
                         (bvsle #x0000000000000001 sli_prec)
                         (bvsle sli_prec #x0000000000000020)))
               (and (bvsle a!3 sli_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.110406s

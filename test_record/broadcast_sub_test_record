1 1 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.987725s
1 1 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.19899s
1 1 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.930009s
1 1 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.14342s
1 1 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.96505s
1 1 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.03619s
1 1 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.946914s
1 1 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.924791s
1 1 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.967926s
1 1 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.433024s
1 1 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.654342s
1 1 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.577158s
1 1 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.54832s
1 1 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.695928s
1 1 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.425803s
1 1 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.697517s
1 1 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.761218s
1 1 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.29905s
1 1 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.427934s
1 1 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.395835s
1 1 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.779792s
1 1 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.566418s
1 1 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.592583s
1 1 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.548399s
1 1 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.457157s
1 1 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.669733s
1 1 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.605398s
1 1 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.603689s
1 1 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.22125s
1 1 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.54462s
1 14 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.658664s
1 14 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.731359s
1 14 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.666756s
1 14 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.13567s
1 14 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.02397s
1 14 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.13007s
1 14 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.70168s
1 14 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.0884s
1 14 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.04885s
1 14 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.64559s
1 14 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.728514s
1 14 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.20088s
1 14 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.28688s
1 14 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.08483s
1 14 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.489615s
1 14 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.03698s
1 14 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.31001s
1 14 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.13861s
1 14 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.17301s
1 14 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.311443s
1 14 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.660924s
1 14 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.56189s
1 14 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.616058s
1 14 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.344361s
1 14 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.550442s
1 14 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.3314s
1 14 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.16004s
1 14 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.34369s
1 14 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.557164s
1 14 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.305914s
1 27 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.875823s
1 27 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.75184s
1 27 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.730305s
1 27 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.510185s
1 27 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.31005s
1 27 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.01811s
1 27 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.667526s
1 27 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.715821s
1 27 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.698134s
1 27 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.742505s
1 27 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.06223s
1 27 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.386822s
1 27 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.78576s
1 27 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.716629s
1 27 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.572163s
1 27 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.39857s
1 27 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.413598s
1 27 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.374066s
1 27 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.568646s
1 27 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.589964s
1 27 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.66262s
1 27 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.423677s
1 27 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.682617s
1 27 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.351191s
1 27 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.403245s
1 27 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.00237s
1 27 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.41296s
1 27 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.403551s
1 27 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.338222s
1 27 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.357853s
1 40 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.18435s
1 40 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.9553s
1 40 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.00743s
1 40 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.64529s
1 40 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.661851s
1 40 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.809983s
1 40 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.641886s
1 40 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.604075s
1 40 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.826985s
1 40 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.03915s
1 40 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.01886s
1 40 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.12623s
1 40 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.965728s
1 40 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.532392s
1 40 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.439714s
1 40 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.44545s
1 40 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.531063s
1 40 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.492334s
1 40 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.441208s
1 40 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.369974s
1 40 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.49403s
1 40 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.882259s
1 40 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.428134s
1 40 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.4389s
1 40 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.417307s
1 40 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.77748s
1 40 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.64568s
1 40 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.478002s
1 40 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.80891s
1 40 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.779481s
1 53 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.9676s
1 53 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.751854s
1 53 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.869692s
1 53 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.31217s
1 53 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.788628s
1 53 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.27191s
1 53 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.814435s
1 53 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.777574s
1 53 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.80464s
1 53 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.722887s
1 53 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.67813s
1 53 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.780497s
1 53 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.1044s
1 53 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.684159s
1 53 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.973932s
1 53 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.81713s
1 53 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.39996s
1 53 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.619278s
1 53 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.874309s
1 53 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.557703s
1 53 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.22046s
1 53 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.774814s
1 53 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.575233s
1 53 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.485081s
1 53 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.794843s
1 53 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.32394s
1 53 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.007s
1 53 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.614061s
1 53 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.787947s
1 53 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.49218s
1 66 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.64058s
1 66 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.977711s
1 66 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.9324s
1 66 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.964882s
1 66 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.921784s
1 66 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.46848s
1 66 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.975132s
1 66 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.43348s
1 66 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.860817s
1 66 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.39296s
1 66 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.93802s
1 66 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.878984s
1 66 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.871067s
1 66 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.883042s
1 66 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.764191s
1 66 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.97934s
1 66 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.898781s
1 66 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.721739s
1 66 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.26584s
1 66 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.885022s
1 66 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.47478s
1 66 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.46144s
1 66 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.716111s
1 66 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.864281s
1 66 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.399236s
1 66 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 4.1825s
1 66 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.979536s
1 66 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.01419s
1 66 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.869634s
1 66 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.482117s
1 79 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 3.32673s
1 79 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.2192s
1 79 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.90713s
1 79 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.08474s
1 79 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.08458s
1 79 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.84798s
1 79 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.78635s
1 79 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.42335s
1 79 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.49185s
1 79 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.6891s
1 79 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 4.0444s
1 79 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.00768s
1 79 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.02475s
1 79 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.54889s
1 79 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.24097s
1 79 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 3.40101s
1 79 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.974119s
1 79 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.86254s
1 79 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.28206s
1 79 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.13014s
1 79 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 4.25826s
1 79 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.59871s
1 79 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.39037s
1 79 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.06814s
1 79 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.813058s
1 79 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 5.01257s
1 79 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.61255s
1 79 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.21047s
1 79 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.971289s
1 79 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.826332s
1 92 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 5.79338s
1 92 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) (bvsle b_0 #x0000000000000000) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.10236s
1 92 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.03537s
1 92 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.1234s
1 92 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.0629s
1 92 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 3.83048s
1 92 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.07836s
1 92 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.94702s
1 92 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 3.47652s
1 92 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.84486s
1 92 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 4.85944s
1 92 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 4.18766s
1 92 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 3.56665s
1 92 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.7975s
1 92 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.95448s
1 92 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 3.8738s
1 92 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.8631s
1 92 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.56658s
1 92 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 2.01676s
1 92 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.45198s
1 92 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) a!9 (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 5.14017s
1 92 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000)))
      (a!12 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000)))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or a!11 (not a!12))))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.79878s
1 92 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (bvsle b_0 #x0000000000000000) (not a!9) a!10)
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.57598s
1 92 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.27313s
1 92 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (and (not (bvsle #x0000000000000000 a_0))
                (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (not (bvsle #x0000000000000000
                        (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or (not a!9) a!10 (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.06442s
1 92 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 6.05016s
1 92 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.83509s
1 92 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.53916s
1 92 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (bvsle b_0 #x0000000000000000) (not a!10))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 1.03231s
1 92 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun bsub_prec () (_ BitVec 64))
(declare-fun bsub_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= bsub_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!8 (bvsle bsub_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff bsub_prec)))))
      (a!9 (not (bvsle #x0000000000000000
                       (bvadd a_0 (bvmul #xffffffffffffffff b_0)))))
      (a!10 (and (not (bvsle #x0000000000000000 a_0))
                 (not (bvsle #x0000000000000000 (bvmul #xffffffffffffffff b_0)))))
      (a!11 (and (not (bvsle a_0 #x0000000000000000))
                 (not (bvsle (bvmul #xffffffffffffffff b_0) #x0000000000000000))))
      (a!12 (not (bvsle (bvadd a_0 (bvmul #xffffffffffffffff b_0))
                        #x0000000000000000))))
(let ((a!6 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (bvsle a!3 b_0)
                a!4
                (bvsle #x0000000000000001 b_prec)
                (bvsle b_prec #x0000000000000020)
                (= bsub_0 (bvadd a_0 (bvmul #xffffffffffffffff b_0)))
                a!5
                (bvsle #x0000000000000001 bsub_prec)
                (bvsle bsub_prec #x0000000000000020)))
      (a!13 (and (bvsle a!7 bsub_0)
                 a!8
                 (or a!9 (not a!10) (bvsle b_0 #x0000000000000000))
                 (ite (= b_0 #x8000000000000000)
                      (not (bvsle #x0000000000000000 a_0))
                      (or (not a!11) a!12)))))
  (not (or (not a!6) a!13)))))
===== END =====

The model is deterministic
Time: 0.967771s

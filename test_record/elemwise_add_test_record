1 1 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.357241s
1 1 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.61164s
1 1 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.468568s
1 1 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.457322s
1 1 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.652605s
1 1 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.7144s
1 1 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.498455s
1 1 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.421659s
1 1 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.404991s
1 1 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.417723s
1 1 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.457752s
1 1 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.547582s
1 1 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.406941s
1 1 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.437521s
1 1 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.642592s
1 1 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.498919s
1 1 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.469454s
1 1 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.454314s
1 1 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.384371s
1 1 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.42588s
1 1 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.436117s
1 1 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.420075s
1 1 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.510288s
1 1 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.530689s
1 1 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.385442s
1 1 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.471348s
1 1 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.544129s
1 1 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.503917s
1 1 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.427771s
1 1 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.537547s
1 14 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.563771s
1 14 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.455411s
1 14 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.450473s
1 14 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.552004s
1 14 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.51973s
1 14 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.496263s
1 14 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.577113s
1 14 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.432679s
1 14 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.374326s
1 14 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.734305s
1 14 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.650676s
1 14 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.52633s
1 14 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.489442s
1 14 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.414681s
1 14 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.496128s
1 14 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.729072s
1 14 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.464032s
1 14 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.49939s
1 14 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.41329s
1 14 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.495643s
1 14 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.845359s
1 14 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.530795s
1 14 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.567261s
1 14 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.801104s
1 14 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.242993s
1 14 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.681939s
1 14 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.60779s
1 14 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.489932s
1 14 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.267737s
1 14 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.279771s
1 27 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.71729s
1 27 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.536896s
1 27 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.587888s
1 27 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.586797s
1 27 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.557083s
1 27 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.728925s
1 27 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.726925s
1 27 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.513448s
1 27 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.772982s
1 27 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.336184s
1 27 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.601921s
1 27 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.581357s
1 27 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.303984s
1 27 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.261695s
1 27 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.224589s
1 27 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.709072s
1 27 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.590085s
1 27 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.305418s
1 27 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.235098s
1 27 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.295625s
1 27 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.894746s
1 27 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.317429s
1 27 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.278358s
1 27 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.307641s
1 27 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.277584s
1 27 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.05046s
1 27 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.459199s
1 27 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.320038s
1 27 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.246288s
1 27 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.268891s
1 40 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.32664s
1 40 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.531682s
1 40 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.55835s
1 40 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.531434s
1 40 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.466002s
1 40 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.71521s
1 40 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.469854s
1 40 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.481151s
1 40 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.528656s
1 40 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.401165s
1 40 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.931783s
1 40 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.519591s
1 40 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.463611s
1 40 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.389214s
1 40 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.426803s
1 40 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.62787s
1 40 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.462091s
1 40 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.600821s
1 40 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.31022s
1 40 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.328842s
1 40 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.24661s
1 40 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.453979s
1 40 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.364598s
1 40 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.360209s
1 40 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.307921s
1 40 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.51306s
1 40 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.469534s
1 40 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.384164s
1 40 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.31147s
1 40 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.269544s
1 53 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.91068s
1 53 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.910023s
1 53 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.702684s
1 53 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.915099s
1 53 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.714259s
1 53 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.01491s
1 53 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.634666s
1 53 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.596054s
1 53 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.586825s
1 53 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.520725s
1 53 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.30403s
1 53 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.791812s
1 53 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.511061s
1 53 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.470247s
1 53 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.484527s
1 53 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.60587s
1 53 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.610906s
1 53 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.564293s
1 53 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.44507s
1 53 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.572168s
1 53 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.69433s
1 53 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.604506s
1 53 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.510687s
1 53 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.716781s
1 53 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.304003s
1 53 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.05513s
1 53 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.598408s
1 53 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.440046s
1 53 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.395751s
1 53 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.315714s
1 66 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.38676s
1 66 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.78445s
1 66 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.814582s
1 66 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.784556s
1 66 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.877231s
1 66 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.30553s
1 66 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.736906s
1 66 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.683957s
1 66 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.656518s
1 66 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.940279s
1 66 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.7271s
1 66 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.781915s
1 66 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.732985s
1 66 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.683619s
1 66 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.5591s
1 66 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.8151s
1 66 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.770158s
1 66 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.611339s
1 66 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.53827s
1 66 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.481314s
1 66 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.27464s
1 66 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.799842s
1 66 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.53781s
1 66 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.430313s
1 66 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.358635s
1 66 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.43572s
1 66 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.704219s
1 66 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.566239s
1 66 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.397531s
1 66 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.377051s
1 79 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.86272s
1 79 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.942537s
1 79 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.903168s
1 79 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.863611s
1 79 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.957207s
1 79 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.76755s
1 79 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.949078s
1 79 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.911431s
1 79 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.770037s
1 79 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.775324s
1 79 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.0463s
1 79 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.980789s
1 79 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.757756s
1 79 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.686211s
1 79 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.638683s
1 79 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.8899s
1 79 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.828028s
1 79 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.71165s
1 79 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.58913s
1 79 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.503461s
1 79 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.50156s
1 79 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.807372s
1 79 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.632032s
1 79 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.499535s
1 79 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.353467s
1 79 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.88551s
1 79 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.694118s
1 79 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.613907s
1 79 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.485547s
1 79 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.425985s
1 92 1 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 3.38319s
1 92 1 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.20047s
1 92 1 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.18466s
1 92 1 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.1839s
1 92 1 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.06325s
1 92 18 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.03843s
1 92 18 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.08841s
1 92 18 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.06804s
1 92 18 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.965085s
1 92 18 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.888416s
1 92 35 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.57888s
1 92 35 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.01334s
1 92 35 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.04707s
1 92 35 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.783199s
1 92 35 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.763978s
1 92 52 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.29018s
1 92 52 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.920672s
1 92 52 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.833743s
1 92 52 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.695095s
1 92 52 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.631818s
1 92 69 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 2.91739s
1 92 69 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 1.02954s
1 92 69 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.754967s
1 92 69 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.582656s
1 92 69 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.499353s
1 92 86 1
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 3.56469s
1 92 86 24
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.846206s
1 92 86 47
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or a!9 (not (bvsle (bvadd a_0 b_0) #x0000000000000000))))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.742595s
1 92 86 70
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or a!11 (not (bvsle #x0000000000000000 (bvadd a_0 b_0))))))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.482838s
1 92 86 93
===== Z3_PROVER =====
(declare-fun b_0 () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(declare-fun eadd_prec () (_ BitVec 64))
(declare-fun eadd_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!4 (bvsle b_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff b_prec)))))
      (a!5 (= eadd_prec
              (bvadd #x0000000000000001
                     (ite (bvsle a_prec b_prec) b_prec a_prec))))
      (a!7 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!8 (bvsle eadd_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff eadd_prec)))))
      (a!9 (not (and (not (bvsle a_0 #x0000000000000000))
                     (not (bvsle b_0 #x0000000000000000)))))
      (a!11 (not (and (not (bvsle #x0000000000000000 a_0))
                      (not (bvsle #x0000000000000000 b_0))))))
(let ((a!6 (not (and (bvsle a!1 a_0)
                     a!2
                     (bvsle #x0000000000000001 a_prec)
                     (bvsle a_prec #x0000000000000020)
                     (bvsle a!3 b_0)
                     a!4
                     (bvsle #x0000000000000001 b_prec)
                     (bvsle b_prec #x0000000000000020)
                     (= eadd_0 (bvadd a_0 b_0))
                     a!5
                     (bvsle #x0000000000000001 eadd_prec)
                     (bvsle eadd_prec #x0000000000000020))))
      (a!10 (or (not (bvsle (bvadd a_0 b_0) #x0000000000000000)) a!9))
      (a!12 (or (not (bvsle #x0000000000000000 (bvadd a_0 b_0))) a!11)))
  (not (or a!6 (and (bvsle a!7 eadd_0) a!8 a!10 a!12))))))
===== END =====

The model is deterministic
Time: 0.4931s

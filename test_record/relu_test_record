1 1 1 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.067124s
1 1 1 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.068378s
1 1 1 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.068412s
1 1 1 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.075728s
1 1 1 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.072865s
1 1 18 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.07225s
1 1 18 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.089087s
1 1 18 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.073872s
1 1 18 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.083753s
1 1 18 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.066771s
1 1 35 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.07478s
1 1 35 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.071733s
1 1 35 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.066446s
1 1 35 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.067583s
1 1 35 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.073862s
1 1 52 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.110285s
1 1 52 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.089462s
1 1 52 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.071513s
1 1 52 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.067296s
1 1 52 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.065747s
1 1 69 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.085153s
1 1 69 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.093142s
1 1 69 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.065401s
1 1 69 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.097162s
1 1 69 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.067923s
1 1 86 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.082901s
1 1 86 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.077976s
1 1 86 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.076832s
1 1 86 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.072091s
1 1 86 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.077246s
1 14 1 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.08268s
1 14 1 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.085573s
1 14 1 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.088283s
1 14 1 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.093952s
1 14 1 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.075879s
1 14 18 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.083288s
1 14 18 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.080362s
1 14 18 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.069129s
1 14 18 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.093327s
1 14 18 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.074208s
1 14 35 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.114318s
1 14 35 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.079297s
1 14 35 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.095182s
1 14 35 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.070128s
1 14 35 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.072165s
1 14 52 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.156273s
1 14 52 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.092428s
1 14 52 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.084003s
1 14 52 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.07102s
1 14 52 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.072515s
1 14 69 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.218203s
1 14 69 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.101845s
1 14 69 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.087535s
1 14 69 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.07893s
1 14 69 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.079175s
1 14 86 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.240806s
1 14 86 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.101112s
1 14 86 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.112268s
1 14 86 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.08455s
1 14 86 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.082172s
1 27 1 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.289646s
1 27 1 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.118124s
1 27 1 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.12693s
1 27 1 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.164804s
1 27 1 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.119333s
1 27 18 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.184585s
1 27 18 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.126652s
1 27 18 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.115613s
1 27 18 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.115167s
1 27 18 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.10746s
1 27 35 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.236523s
1 27 35 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.117182s
1 27 35 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.121594s
1 27 35 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.111217s
1 27 35 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.091161s
1 27 52 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.248658s
1 27 52 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.115857s
1 27 52 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.102307s
1 27 52 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.092287s
1 27 52 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.081694s
1 27 69 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.30988s
1 27 69 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.117798s
1 27 69 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.099696s
1 27 69 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.091156s
1 27 69 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.035796s
1 27 86 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.356105s
1 27 86 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.145852s
1 27 86 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.127912s
1 27 86 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.044843s
1 27 86 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.038613s
1 40 1 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.431415s
1 40 1 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.17179s
1 40 1 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.190359s
1 40 1 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.271467s
1 40 1 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.186343s
1 40 18 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.340627s
1 40 18 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.200441s
1 40 18 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.179777s
1 40 18 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.157557s
1 40 18 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.144461s
1 40 35 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.378789s
1 40 35 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.177645s
1 40 35 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.178275s
1 40 35 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.097585s
1 40 35 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.109272s
1 40 52 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.427787s
1 40 52 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.157882s
1 40 52 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.099361s
1 40 52 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.061107s
1 40 52 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.046533s
1 40 69 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.408333s
1 40 69 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.16335s
1 40 69 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.073349s
1 40 69 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.049668s
1 40 69 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.046508s
1 40 86 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.523525s
1 40 86 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.202169s
1 40 86 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.201669s
1 40 86 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.05089s
1 40 86 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.051886s
1 53 1 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.658195s
1 53 1 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.191061s
1 53 1 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.171561s
1 53 1 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.314528s
1 53 1 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.176255s
1 53 18 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.328354s
1 53 18 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.191498s
1 53 18 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.228469s
1 53 18 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.141447s
1 53 18 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.141756s
1 53 35 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.450286s
1 53 35 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.174655s
1 53 35 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.131605s
1 53 35 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.122432s
1 53 35 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.106591s
1 53 52 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.46659s
1 53 52 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.165698s
1 53 52 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.138574s
1 53 52 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.115415s
1 53 52 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.095288s
1 53 69 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.555034s
1 53 69 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.137022s
1 53 69 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.130435s
1 53 69 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.080442s
1 53 69 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.07364s
1 53 86 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.746152s
1 53 86 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.150959s
1 53 86 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.11456s
1 53 86 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.086556s
1 53 86 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.071415s
1 66 1 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.850178s
1 66 1 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.327847s
1 66 1 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.257139s
1 66 1 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.269776s
1 66 1 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.260348s
1 66 18 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.477813s
1 66 18 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.233227s
1 66 18 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.242495s
1 66 18 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.192337s
1 66 18 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.167739s
1 66 35 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.590493s
1 66 35 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.224084s
1 66 35 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.170201s
1 66 35 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.188786s
1 66 35 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.151685s
1 66 52 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.690166s
1 66 52 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.18642s
1 66 52 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.180592s
1 66 52 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.160375s
1 66 52 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.117562s
1 66 69 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.714934s
1 66 69 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.201317s
1 66 69 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.2006s
1 66 69 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.116482s
1 66 69 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.039552s
1 66 86 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.891507s
1 66 86 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.161498s
1 66 86 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.152016s
1 66 86 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.096983s
1 66 86 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.092822s
1 79 1 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.09805s
1 79 1 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.404781s
1 79 1 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.300599s
1 79 1 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.31215s
1 79 1 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.314256s
1 79 18 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.632544s
1 79 18 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.305957s
1 79 18 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.332138s
1 79 18 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.305691s
1 79 18 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.208607s
1 79 35 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.777834s
1 79 35 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.280739s
1 79 35 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.252225s
1 79 35 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.232506s
1 79 35 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.195839s
1 79 52 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.952728s
1 79 52 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.2991s
1 79 52 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.314814s
1 79 52 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.218597s
1 79 52 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.139219s
1 79 69 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.909113s
1 79 69 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.257987s
1 79 69 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.210468s
1 79 69 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.158759s
1 79 69 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.105333s
1 79 86 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.10784s
1 79 86 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.208516s
1 79 86 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.20888s
1 79 86 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.123952s
1 79 86 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.140379s
1 92 1 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.333s
1 92 1 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.594309s
1 92 1 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.431609s
1 92 1 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.419579s
1 92 1 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.378313s
1 92 18 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.794405s
1 92 18 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.417133s
1 92 18 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.398946s
1 92 18 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.388205s
1 92 18 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.320197s
1 92 35 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.946204s
1 92 35 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.353948s
1 92 35 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.328433s
1 92 35 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.259279s
1 92 35 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.274816s
1 92 52 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.14695s
1 92 52 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.35594s
1 92 52 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.323697s
1 92 52 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.332583s
1 92 52 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.196764s
1 92 69 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.07024s
1 92 69 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.329937s
1 92 69 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.299368s
1 92 69 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.201876s
1 92 69 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.12752s
1 92 86 1
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.29965s
1 92 86 24
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.321203s
1 92 86 47
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.243964s
1 92 86 70
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.15325s
1 92 86 93
===== Z3_PROVER =====
(declare-fun relu_prec () (_ BitVec 64))
(declare-fun relu_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec)))))
      (a!5 (bvsle relu_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff relu_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= relu_0
                   (ite (bvsle #x0000000000000000 a_0) a_0 #x0000000000000000))
                (= relu_prec a_prec)
                (bvsle #x0000000000000001 relu_prec)
                (bvsle relu_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 relu_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.120283s

1 1 1 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.053287s
1 1 1 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055706s
1 1 1 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055191s
1 1 1 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05758s
1 1 1 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060689s
1 1 18 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057852s
1 1 18 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056106s
1 1 18 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056495s
1 1 18 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059658s
1 1 18 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056602s
1 1 35 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05405s
1 1 35 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.054948s
1 1 35 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057525s
1 1 35 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060025s
1 1 35 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.054865s
1 1 52 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057747s
1 1 52 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060205s
1 1 52 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055493s
1 1 52 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058165s
1 1 52 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058479s
1 1 69 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056195s
1 1 69 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057415s
1 1 69 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058923s
1 1 69 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057579s
1 1 69 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055385s
1 1 86 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059868s
1 1 86 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060868s
1 1 86 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061293s
1 1 86 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061141s
1 1 86 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055212s
1 14 1 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057374s
1 14 1 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057811s
1 14 1 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06275s
1 14 1 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060793s
1 14 1 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063153s
1 14 18 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061055s
1 14 18 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060313s
1 14 18 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.055038s
1 14 18 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058091s
1 14 18 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057843s
1 14 35 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059822s
1 14 35 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057776s
1 14 35 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.058879s
1 14 35 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06136s
1 14 35 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056561s
1 14 52 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060743s
1 14 52 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057724s
1 14 52 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059553s
1 14 52 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057127s
1 14 52 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.05894s
1 14 69 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059394s
1 14 69 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061023s
1 14 69 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059415s
1 14 69 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063203s
1 14 69 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056821s
1 14 86 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.056163s
1 14 86 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06223s
1 14 86 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060628s
1 14 86 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06624s
1 14 86 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.060989s
1 27 1 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057329s
1 27 1 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061668s
1 27 1 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.059498s
1 27 1 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064148s
1 27 1 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067904s
1 27 18 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067888s
1 27 18 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.065642s
1 27 18 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063762s
1 27 18 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.061716s
1 27 18 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064803s
1 27 35 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063756s
1 27 35 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067278s
1 27 35 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06567s
1 27 35 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068796s
1 27 35 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06689s
1 27 52 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067126s
1 27 52 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063468s
1 27 52 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.073478s
1 27 52 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063886s
1 27 52 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.0642s
1 27 69 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.070291s
1 27 69 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06763s
1 27 69 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.063361s
1 27 69 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.066674s
1 27 69 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.049032s
1 27 86 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.42072s
1 27 86 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064945s
1 27 86 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064819s
1 27 86 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.24256s
1 27 86 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.052884s
1 40 1 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.414932s
1 40 1 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069714s
1 40 1 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.0641s
1 40 1 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069253s
1 40 1 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067882s
1 40 18 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068254s
1 40 18 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.069416s
1 40 18 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.072055s
1 40 18 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.074314s
1 40 18 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.072667s
1 40 35 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.062138s
1 40 35 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067177s
1 40 35 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.071085s
1 40 35 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.064256s
1 40 35 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.070685s
1 40 52 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.29552s
1 40 52 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.074212s
1 40 52 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.163347s
1 40 52 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067932s
1 40 52 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.057136s
1 40 69 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.355855s
1 40 69 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.074704s
1 40 69 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.121609s
1 40 69 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.079774s
1 40 69 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.050544s
1 40 86 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.455987s
1 40 86 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.150627s
1 40 86 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.32s
1 40 86 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.076169s
1 40 86 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.63001s
1 53 1 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.565954s
1 53 1 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067345s
1 53 1 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.067876s
1 53 1 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.228531s
1 53 1 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.06927s
1 53 18 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.068889s
1 53 18 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.160976s
1 53 18 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.159496s
1 53 18 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.188984s
1 53 18 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.160611s
1 53 35 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.379034s
1 53 35 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.153741s
1 53 35 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.186936s
1 53 35 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.155272s
1 53 35 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.135651s
1 53 52 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.428672s
1 53 52 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.162657s
1 53 52 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.134093s
1 53 52 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.113186s
1 53 52 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.080155s
1 53 69 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.515778s
1 53 69 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.148394s
1 53 69 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.183036s
1 53 69 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.078031s
1 53 69 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.04676s
1 53 86 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.630711s
1 53 86 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.221109s
1 53 86 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.139053s
1 53 86 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.62231s
1 53 86 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.076852s
1 66 1 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.767166s
1 66 1 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.252274s
1 66 1 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.254464s
1 66 1 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.302948s
1 66 1 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.257845s
1 66 18 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.422726s
1 66 18 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.283482s
1 66 18 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.22873s
1 66 18 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.222776s
1 66 18 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.22472s
1 66 35 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.419109s
1 66 35 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.198824s
1 66 35 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.223331s
1 66 35 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.36461s
1 66 35 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.159177s
1 66 52 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.579041s
1 66 52 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.241769s
1 66 52 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.4525s
1 66 52 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.148574s
1 66 52 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.63845s
1 66 69 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.684927s
1 66 69 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.249205s
1 66 69 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.262197s
1 66 69 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.62725s
1 66 69 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.092895s
1 66 86 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.801702s
1 66 86 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.293936s
1 66 86 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.14486s
1 66 86 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.10041s
1 66 86 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.099862s
1 79 1 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.956164s
1 79 1 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.367673s
1 79 1 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.29965s
1 79 1 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.393526s
1 79 1 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.287797s
1 79 18 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.486207s
1 79 18 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.300394s
1 79 18 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.275995s
1 79 18 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.277172s
1 79 18 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.329066s
1 79 35 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.486032s
1 79 35 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.29507s
1 79 35 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.272937s
1 79 35 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.215089s
1 79 35 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.220073s
1 79 52 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.649549s
1 79 52 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.275409s
1 79 52 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.239959s
1 79 52 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.214117s
1 79 52 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.163237s
1 79 69 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.766899s
1 79 69 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.248736s
1 79 69 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.192713s
1 79 69 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.160612s
1 79 69 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.117349s
1 79 86 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.952282s
1 79 86 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.60574s
1 79 86 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 2.77204s
1 79 86 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.100622s
1 79 86 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 5.29254s
1 92 1 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.15295s
1 92 1 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.379028s
1 92 1 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.325971s
1 92 1 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.436157s
1 92 1 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.372986s
1 92 18 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.614413s
1 92 18 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.34746s
1 92 18 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.354244s
1 92 18 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.271982s
1 92 18 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.266429s
1 92 35 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.584628s
1 92 35 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.312348s
1 92 35 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.298865s
1 92 35 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.239544s
1 92 35 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.279589s
1 92 52 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.71749s
1 92 52 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.287676s
1 92 52 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.27781s
1 92 52 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.220497s
1 92 52 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.170539s
1 92 69 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.956506s
1 92 69 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.276591s
1 92 69 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.257636s
1 92 69 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.209249s
1 92 69 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.124743s
1 92 86 1
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 1.08152s
1 92 86 24
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.446571s
1 92 86 47
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.243539s
1 92 86 70
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.16641s
1 92 86 93
===== Z3_PROVER =====
(declare-fun rsp_prec () (_ BitVec 64))
(declare-fun rsp_0 () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!3 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec)))))
      (a!4 (bvsle rsp_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff rsp_prec))))))
(let ((a!5 (or (not (and (bvsle a!1 a_0)
                         a!2
                         (bvsle #x0000000000000001 a_prec)
                         (bvsle a_prec #x0000000000000020)
                         (= rsp_0 a_0)
                         (= rsp_prec a_prec)
                         (bvsle #x0000000000000001 rsp_prec)
                         (bvsle rsp_prec #x0000000000000020)))
               (and (bvsle a!3 rsp_0) a!4))))
  (not a!5))))
===== END =====

The model is deterministic
Time: 0.142704s

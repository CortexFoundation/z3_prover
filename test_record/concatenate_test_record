1 1 1 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.129842s
1 1 1 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.143161s
1 1 1 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.169048s
1 1 1 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.139153s
1 1 1 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.139934s
1 1 18 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.162235s
1 1 18 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.152678s
1 1 18 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.138412s
1 1 18 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.120901s
1 1 18 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.147405s
1 1 35 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.148671s
1 1 35 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.139607s
1 1 35 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.14628s
1 1 35 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.158991s
1 1 35 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.143562s
1 1 52 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.151811s
1 1 52 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.15821s
1 1 52 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.14996s
1 1 52 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.124784s
1 1 52 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.142232s
1 1 69 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.146072s
1 1 69 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.15779s
1 1 69 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.172824s
1 1 69 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.132731s
1 1 69 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.134532s
1 1 86 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.149622s
1 1 86 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.15492s
1 1 86 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.145598s
1 1 86 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.140406s
1 1 86 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.141873s
1 14 1 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.180085s
1 14 1 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.147234s
1 14 1 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.162162s
1 14 1 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.154771s
1 14 1 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.156728s
1 14 18 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.142397s
1 14 18 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.134044s
1 14 18 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.138603s
1 14 18 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.134069s
1 14 18 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.13384s
1 14 35 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.219781s
1 14 35 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.148428s
1 14 35 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.146034s
1 14 35 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.125802s
1 14 35 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.155749s
1 14 52 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.274306s
1 14 52 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.181684s
1 14 52 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.15865s
1 14 52 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.154814s
1 14 52 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.161631s
1 14 69 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.422799s
1 14 69 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.225673s
1 14 69 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.183521s
1 14 69 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.152543s
1 14 69 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.083209s
1 14 86 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.358006s
1 14 86 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.201969s
1 14 86 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.18905s
1 14 86 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.056866s
1 14 86 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.090593s
1 27 1 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.407161s
1 27 1 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.243101s
1 27 1 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.293269s
1 27 1 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.251792s
1 27 1 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.223644s
1 27 18 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.314792s
1 27 18 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.237826s
1 27 18 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.239636s
1 27 18 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.218837s
1 27 18 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.241021s
1 27 35 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.361926s
1 27 35 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.219416s
1 27 35 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.148147s
1 27 35 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.131283s
1 27 35 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.098402s
1 27 52 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.344085s
1 27 52 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.216321s
1 27 52 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.252292s
1 27 52 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.092104s
1 27 52 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.100913s
1 27 69 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.509158s
1 27 69 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.134759s
1 27 69 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.137656s
1 27 69 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.096086s
1 27 69 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.099661s
1 27 86 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.691795s
1 27 86 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.233213s
1 27 86 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.164959s
1 27 86 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 2.91997s
1 27 86 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.11349s
1 40 1 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.849738s
1 40 1 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.265739s
1 40 1 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.314503s
1 40 1 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.244014s
1 40 1 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.257865s
1 40 18 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.450119s
1 40 18 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.269214s
1 40 18 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.281664s
1 40 18 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.261271s
1 40 18 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.245702s
1 40 35 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.561645s
1 40 35 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.260781s
1 40 35 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.273031s
1 40 35 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.190919s
1 40 35 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.169065s
1 40 52 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.685244s
1 40 52 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.23062s
1 40 52 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.174837s
1 40 52 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.177313s
1 40 52 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.102341s
1 40 69 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.779285s
1 40 69 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.254054s
1 40 69 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.176952s
1 40 69 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.140979s
1 40 69 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.108373s
1 40 86 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.964265s
1 40 86 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.377165s
1 40 86 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 2.84124s
1 40 86 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.118412s
1 40 86 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 5.38539s
1 53 1 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.18762s
1 53 1 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.568262s
1 53 1 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.408067s
1 53 1 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.350267s
1 53 1 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.53163s
1 53 18 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.670609s
1 53 18 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.328453s
1 53 18 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.33383s
1 53 18 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.364403s
1 53 18 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.285486s
1 53 35 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.856048s
1 53 35 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.34649s
1 53 35 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.407629s
1 53 35 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.263182s
1 53 35 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.239407s
1 53 52 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.915399s
1 53 52 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.327236s
1 53 52 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.228427s
1 53 52 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.251672s
1 53 52 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.123544s
1 53 69 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.992558s
1 53 69 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.333068s
1 53 69 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.258871s
1 53 69 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.171892s
1 53 69 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.161338s
1 53 86 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.27244s
1 53 86 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.26988s
1 53 86 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.271975s
1 53 86 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 5.50635s
1 53 86 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.174873s
1 66 1 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.4209s
1 66 1 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.423761s
1 66 1 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.54796s
1 66 1 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.419461s
1 66 1 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.63931s
1 66 18 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.837578s
1 66 18 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.394819s
1 66 18 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.448748s
1 66 18 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.344422s
1 66 18 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.390359s
1 66 35 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.994312s
1 66 35 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.447024s
1 66 35 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.384913s
1 66 35 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 3.01819s
1 66 35 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.338465s
1 66 52 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.16913s
1 66 52 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.365786s
1 66 52 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 2.91354s
1 66 52 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.296044s
1 66 52 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 6.56204s
1 66 69 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.8421s
1 66 69 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.389046s
1 66 69 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.350127s
1 66 69 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 5.62144s
1 66 69 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.13864s
1 66 86 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.59915s
1 66 86 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.390137s
1 66 86 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.283484s
1 66 86 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.155331s
1 66 86 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.200283s
1 79 1 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.85304s
1 79 1 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.951724s
1 79 1 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.696555s
1 79 1 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.658607s
1 79 1 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.98944s
1 79 18 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.06116s
1 79 18 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.535004s
1 79 18 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.59056s
1 79 18 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.582722s
1 79 18 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.456359s
1 79 35 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.30968s
1 79 35 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.566294s
1 79 35 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.537457s
1 79 35 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.446024s
1 79 35 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.441116s
1 79 52 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.31275s
1 79 52 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.57552s
1 79 52 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.479968s
1 79 52 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.400545s
1 79 52 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.333324s
1 79 69 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.641s
1 79 69 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.542512s
1 79 69 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.439433s
1 79 69 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.35113s
1 79 69 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.135772s
1 79 86 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 2.01279s
1 79 86 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 3.13509s
1 79 86 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 5.72531s
1 79 86 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.261421s
1 79 86 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 10.8186s
1 92 1 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 2.36379s
1 92 1 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.20833s
1 92 1 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.922828s
1 92 1 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.821512s
1 92 1 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.20019s
1 92 18 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.3873s
1 92 18 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.873177s
1 92 18 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.687842s
1 92 18 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.04196s
1 92 18 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.642565s
1 92 35 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.6283s
1 92 35 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.847931s
1 92 35 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.668356s
1 92 35 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.613233s
1 92 35 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.512191s
1 92 52 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 1.49252s
1 92 52 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.661947s
1 92 52 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.600782s
1 92 52 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.42813s
1 92 52 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.403355s
1 92 69 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 2.08586s
1 92 69 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.592352s
1 92 69 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.534296s
1 92 69 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.442558s
1 92 69 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.221243s
1 92 86 1
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 2.29785s
1 92 86 24
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.666224s
1 92 86 47
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.468717s
1 92 86 70
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.264096s
1 92 86 93
===== Z3_PROVER =====
(declare-fun concat_prec () (_ BitVec 64))
(declare-fun concat_0 () (_ BitVec 64))
(declare-fun b_prec () (_ BitVec 64))
(declare-fun a_prec () (_ BitVec 64))
(declare-fun a_0 () (_ BitVec 64))
(assert (let ((a!1 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!2 (bvsle a_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff a_prec)))))
      (a!4 (bvadd #x0000000000000001
                  (bvmul #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec)))))
      (a!5 (bvsle concat_0
                  (bvadd #xffffffffffffffff
                         (bvshl #x0000000000000001
                                (bvadd #xffffffffffffffff concat_prec))))))
(let ((a!3 (and (bvsle a!1 a_0)
                a!2
                (bvsle #x0000000000000001 a_prec)
                (bvsle a_prec #x0000000000000020)
                (= concat_0 a_0)
                (= concat_prec (ite (bvsle b_prec a_prec) a_prec b_prec))
                (bvsle #x0000000000000001 concat_prec)
                (bvsle concat_prec #x0000000000000020))))
  (not (or (not a!3) (and (bvsle a!4 concat_0) a!5))))))
===== END =====

The model is deterministic
Time: 0.227419s
